[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 color: hint_color;
uniform float intensity: hint_range(0, 1);

float r(vec2 c)
{
    return fract(43.0 * sin(c.x + 7.0 * c.y));
}

float n(vec2 p)
{
    vec2 i = floor(p);
	vec2 w = p - i;
	vec2 j = vec2(1.0, 0.0);
	
    w = w * w * (3.0 -w -w);
    return mix(mix(r(i), r(i + j), w.x), mix(r(i + j.yx), r(i + 1.0), w.x), w.y);
}

float a(vec2 p)
{
    float m = 0.0;
	float f = 2.0;
	
    for (int i = 0; i < 9; i++)
	{ 
		m += n(f * p) / f;
		f += f;
	}
	
    return m;
}

void fragment()
{		
		float t = 1.0 - intensity;
		COLOR = smoothstep(t, t + 0.1, a(SCREEN_UV.xy * 4.5)) * color;
}"

[resource]
shader = SubResource( 1 )
shader_param/color = null
shader_param/intensity = null
